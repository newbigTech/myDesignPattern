@startuml
'http://blog.javachen.com/2016/02/29/plantuml-class-diagram.html
'泛化，Generalization：<|--
'关联，Association：<--
'组合，Composition：*--
'聚合，Aggregation：o--
'实现，Realization：<|..
'依赖，Dependency：<..

class RegistryProtocol

namespace dubbo.factory #DDDDDD {
    interface RegistryFactory{
        Registry getRegistry(URL url)
    }
    abstract class AbstractRegistryFactory {
    Registry getRegistry(URL url)
        protected abstract Registry createRegistry(URL url)
    }
    class ZookeeperRegistryFactory {
        Registry createRegistry(URL url)
    }
    RegistryFactory<|.. AbstractRegistryFactory
    AbstractRegistryFactory<|-- ZookeeperRegistryFactory
}

namespace dubbo.registry #DDDDDD {
    interface RegistryService{
        void register(URL url)
    }
    interface Registry
    abstract class AbstractRegistry {
        void register(URL url)
    }
    abstract class FailbackRegistry {
        void register(URL url){super.register}
        protected abstract void doRegister(URL url);
    }
    class ZookeeperRegistry {
        doRegister(URL url)
    }
    RegistryService<|-- Registry
    Registry<|.. AbstractRegistry
    AbstractRegistry<|-- FailbackRegistry:super(url)
    FailbackRegistry<|-- ZookeeperRegistry:super(url)
}

namespace dubbo.zookeeper #DDDDDD {
    interface ZookeeperClient{
    void create(String path, boolean ephemeral)
    }
    abstract class AbstractZookeeperClient{
        public void create(){}
        protected abstract void createPersistent(String path);
        protected abstract void createEphemeral(String path);
    }
    class ZkclientZookeeperClient{
        public void createEphemeral(String path) {}
        public void createPersistent(String path) {}
    }
    ZookeeperClient<|.. AbstractZookeeperClient
    AbstractZookeeperClient<|-- ZkclientZookeeperClient:super(url)
}

RegistryProtocol...>dubbo.factory.AbstractRegistryFactory:1.registryFactory.getRegistry(url)
dubbo.factory.AbstractRegistryFactory..>dubbo.factory.ZookeeperRegistryFactory:2.createRegistry(url)
dubbo.factory.ZookeeperRegistryFactory..> dubbo.registry.ZookeeperRegistry:3.new ZookeeperRegistry(URL\n,ZookeeperTransporter)
RegistryProtocol..> dubbo.registry.FailbackRegistry:4.registry.register(url)
dubbo.registry.FailbackRegistry..>dubbo.registry.ZookeeperRegistry:5.doRegister(url)

dubbo.registry.ZookeeperRegistry..>dubbo.zookeeper.AbstractZookeeperClient:6.zkClient.create()
dubbo.zookeeper.AbstractZookeeperClient...>dubbo.zookeeper.ZkclientZookeeperClient:7.createEphemeral()


@enduml