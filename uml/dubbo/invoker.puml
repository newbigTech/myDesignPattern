@startuml
participant "client"         as client
participant "Invoker1"       as Invoker1
participant "EchoFilter"     as EchoFilter
participant "Invoker2"       as Invoker2
participant "TraceFilter"  as TraceFilter
participant "Invoker3"       as Invoker3
participant "TimeOutFilter"  as TimeOutFilter
participant "Invoker4"       as Invoker4

client -> Invoker1:invoke(invocation)
Invoker1->EchoFilter:invoke(invoker2,invocation)
EchoFilter->EchoFilter:preHand()
EchoFilter->Invoker2:invoke(invocation)
Invoker2->TraceFilter:invoke(invoker3,invocation)
TraceFilter->TraceFilter:preHand()
TraceFilter->Invoker3:invoke(invocation)
Invoker3->TimeOutFilter:invoke(invoke4,invocation)
TimeOutFilter->TimeOutFilter:preHand()
TimeOutFilter->Invoker4:invoke4.invoke(invocation)
Invoker4->Invoker4:invoke(invocation):Result
TimeOutFilter->client:Result
@enduml