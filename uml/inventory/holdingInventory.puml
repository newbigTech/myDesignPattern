@startuml
title 流程图-预扣库存
start
:官网发起请求;
note right
参数：业务类型、主业务单号、CountryCode、
skuCode/数量列表、逻辑库存业务类型、库区编码
end note
if (是否抢购sku) then (yes)
    :执行redis的opStack命令;
else (no)
    :将需要更新的逻辑库存PO&物理库存PO
    按照combinedKey排序;
    note right
    防止发生死锁
    end note
    :批量插入物理流水&逻辑流水;
    :批量更新物理库存&逻辑库存;
endif

:查询仓库指定物流渠道的配送时效;
note right
根据仓库编码、物流渠道、地址信息
end note

:根据用户下单的信息组装CombinedKey查询逻辑库存表;
note right
上面预扣库存后,根据<font color=red>预扣+占用+待预扣/待占用>实存
 判断是否发生预售
end note

if (是否存在预售sku) then (yes)
    :根据combinedKey查询预售批次主表;
    :根据combinedKey查询预售批次明细表;
    :遍历预售批次明细表,找出满足
    <font color=red>预扣+占用+待预扣/占用<多个预售批次明细的待收货总数量+实存数量
    中的多个预售批次明细中的最大批次到货时间
    此最大批次到货时间作为计算ETD的基准时间;
else (no)
    :将当前时间作为计算ETD的基准时间;
endif

:根据基准时间、仓库处理时效计算ETD/ETA;
note right
预售的仓库处理时效为0
非预售的仓库处理时效从DB获取
end note

end
@enduml