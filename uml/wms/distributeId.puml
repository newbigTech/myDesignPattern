@startuml
AppProcessCodeZkCreator -> AppProcessCodeZkCreator:<font color=red>【1】</font>afterPropertiesSet()
activate AppProcessCodeZkCreator
AppProcessCodeZkCreator-> FS:从"${user.home}/wms_8580"文件中<font color=red>appProcessCode</font>数据
alt 成功读取到且为数字
    AppProcessCodeZkCreator->AppProcessCode:设置appProceeCode到AppProcessCode
end
deactivate AppProcessCodeZkCreator



AppProcessCodeZkCreator -> AppProcessCodeZkCreator: <font color=red>【2】</font>postProcessBeanFactory()
activate AppProcessCodeZkCreator
AppProcessCodeZkCreator -> Zookeeper: 创建持久化节点"/identity/appProcessCode/wms"

AppProcessCodeZkCreator -> AppProcessCodeZkCreator:获取本机IP
AppProcessCodeZkCreator -> AppProcessCodeZkCreator:组装数据data="host+codeFileName"
note right
codeFileName为appName_appPort,wms_8580
即data="172.21.104.26_wms_8580"
end note
AppProcessCodeZkCreator ->AppProcessCode:获取appProcessCode
==内存中存在appProcessCode则尝试注册一次zk临时节点==
alt appProcessCode不为空
AppProcessCodeZkCreator -> Zookeeper: 创建临时节点"/identity/appProcessCode/wms/<font color=red>appProcessCode</font>"\n节点value值为data
end

==内存中不存在or上述注册失败==
alt appProcessCode为空 or 上述注册失败
    AppProcessCodeZkCreator -> Zookeeper:从"/identity/appProcessCode/wms"读取value值到<font color=blue>appProcessCode</font>和<font color=red>curMaxCode
    loop endless times
        AppProcessCodeZkCreator -> AppProcessCodeZkCreator:<font color=blue>appProcessCode</font> = createNext(appProcessCode, maxCodeLength)
        AppProcessCodeZkCreator -> Zookeeper:创建临时节点"/identity/appProcessCode/wms/<font color=blue>appProcessCode</font>",value值为data
    end
    AppProcessCodeZkCreator->AppProcessCode:设置appProceeCode到AppProcessCode
    AppProcessCodeZkCreator->FS:将appProcessCode写入"${user.home}/wms_8580"
end

group 获取最新的最大应用标识newCurMaxCode
    AppProcessCodeZkCreator -> Zookeeper:将newCurMaxCode写入到节点"/identity/appProcessCode/wms"
end
note left
CurMaxCode写入zk不成功，
不影响使用
end note
deactivate AppProcessCodeZkCreator

@enduml